{"version":3,"sources":["components/ContactsForm/ContactsForm.module.css","components/Contacts/Contacts.module.css","components/Section/Section.module.css","components/Filter/Filter.module.css","components/App/App.module.css","components/Section/Section.jsx","components/ContactsForm/ContactsForm.jsx","components/Filter/Filter.jsx","components/Contacts/Contacts.jsx","components/App/App.jsx","index.js"],"names":["module","exports","Section","title","children","className","s","section","ContactsForm","state","name","number","handleChange","evt","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","resetState","form","this","text","type","pattern","required","onChange","autoComplete","btn","Component","Filter","Contacts","contacts","onDeleteContact","list","map","id","item","onClick","App","filter","formSubmitHandler","data","find","contact","alert","newData","nanoid","prevState","onChangeFilter","localStorage","getItem","persedContacts","JSON","parse","prevProps","setItem","stringify","normalizedFilter","toLowerCase","filteredContacts","includes","container","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.b4e8550a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactsForm_form__1TFmt\",\"text\":\"ContactsForm_text__H5JmQ\",\"btn\":\"ContactsForm_btn__1-JNP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__1Yfd1\",\"item\":\"Contacts_item__1ym4F\",\"btn\":\"Contacts_btn__22Lk9\",\"text\":\"Contacts_text__3u6tR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1cKgW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Filter_text__15NsJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__105r9\"};","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section className={s.section}>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};","import { Component } from \"react\";\r\nimport s from './ContactsForm.module.css'\r\n\r\nexport default class ContactsForm extends Component {\r\n    state = {\r\n      name: '',\r\n      number: ''\r\n    };\r\n\r\n    handleChange = evt => {\r\n        const { name, value } = evt.currentTarget\r\n\r\n        this.setState({[name]: value})\r\n    }\r\n\r\n    handleSubmit = evt => {\r\n        evt.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        this.resetState();\r\n    };\r\n\r\n    resetState = () => {\r\n         this.setState({ name: '', number: '' });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form\r\n                className={s.form}\r\n                onSubmit={this.handleSubmit}\r\n            >\r\n                <label>\r\n                    <p className={s.text}>Name</p> \r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={this.state.name}\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n                        required\r\n                        onChange={this.handleChange}\r\n                        autoComplete=\"off\"\r\n                    />\r\n                </label>\r\n                <label>\r\n                    <p className={s.text}>Phone number</p> \r\n                    <input\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        value={this.state.number}\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n                        required\r\n                        onChange={this.handleChange}\r\n                        autoComplete=\"off\"\r\n                    />\r\n                </label>\r\n                <p className={s.text}>\r\n                    <button className={s.btn} type=\"submit\">Add contact</button>\r\n                </p>    \r\n            </form>\r\n        )\r\n    }\r\n\r\n}","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css'\r\n\r\nexport default function Filter({ value, onChange }) {\r\n    return (\r\n    <label>\r\n      <p className={s.text}>Find contacts by name</p>\r\n      <input type=\"text\" value={value} onChange={onChange} />\r\n    </label>\r\n)}\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n}","import PropTypes from 'prop-types';\r\nimport s from './Contacts.module.css'\r\n\r\nexport default function Contacts({ contacts, onDeleteContact }) {\r\n  return (\r\n    \r\n      <ul className={s.list}>\r\n        {contacts.map(({ name, number, id }) => (\r\n          <li\r\n            key={id}\r\n            className={s.item} \r\n          >\r\n            <p className={s.text}>{name}</p>\r\n            <p className={s.text}>{number}</p>\r\n            <button \r\n              className={s.btn}\r\n              onClick={() => onDeleteContact(id)}>\r\n              delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n  );\r\n}\r\n\r\nContacts.propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired\r\n};","import { Component } from 'react';\nimport { nanoid } from 'nanoid'\n\nimport Section from '../Section/Section'\nimport ContactsForm from '../ContactsForm/ContactsForm';\nimport Filter from '../Filter/Filter';\nimport Contacts from '../Contacts/Contacts';\n\nimport s from './App.module.css'\n\nexport default class App extends Component {\n  state = {\n  contacts: [\n    {id: '123', name: 'Rosie Simpson', number: '459-12-56'},\n    {id: '456', name: 'Hermione Kline', number: '443-89-12'},\n    {id: '789', name: 'Eden Clements', number: '645-17-79'},\n    {id: '987', name: 'Annie Copeland', number: '227-91-26'},\n  ],\n  filter: '',\n  }\n  \n   formSubmitHandler = data => {\n    const findName = this.state.contacts.find(\n      contact => contact.name === data.name,\n    );\n    if (findName) {\n      alert(`${data.name} is already in contacts.`);\n      return;\n    }\n     \n    const newData = { id: nanoid(3), ...data };\n    this.setState(prevState => {\n      return {\n        contacts: [...prevState.contacts, newData],\n      };\n    });\n  };\n\n  onChangeFilter = evt => {\n    this.setState({ filter: evt.currentTarget.value });\n  };\n\n  onDeleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts')\n    const persedContacts = JSON.parse(contacts)\n\n    if (persedContacts) {\n      this.setState({ contacts: persedContacts })\n    }\n  }\n\n  componentDidUpdate(prevProps, {contacts}) {\n     if (this.state.contacts !== contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n    }\n  }\n\n  render() {\n\n    const normalizedFilter = this.state.filter.toLowerCase();\n    const filteredContacts = this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n\n    return (\n      <>\n        <div className={s.container}>\n          <Section title=\"Phonebook\">\n            <ContactsForm onSubmit={this.formSubmitHandler} />\n            </Section>\n          <Section title=\"Contacts\">\n            <Filter value={this.state.filter} onChange={this.onChangeFilter} /> \n            <Contacts contacts={filteredContacts} onDeleteContact={this.onDeleteContact} />\n          </Section>\n        </div>\n      </>\n    )\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}